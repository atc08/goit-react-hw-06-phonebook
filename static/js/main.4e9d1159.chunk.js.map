{"version":3,"sources":["components/Filter/Filter.module.css","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","components/Filter/Filter.jsx","components/Filter/Filter.container.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","addedContact","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","state","name","number","handleInputsChange","target","value","setState","handleSubmit","e","preventDefault","onAdd","props","resetForm","this","className","s","FormContainer","onSubmit","InputTitle","type","placeholder","onChange","InputField","InputButton","Component","connect","dispatch","ContactListItem","ondeleteContact","ContactListItemText","onClick","ContactListItemButton","ContactList","contacts","length","map","getFilteredContact","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","phonebook","Filter","onChangeFilter","FilterText","FilterInput","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4e9d1159.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterText\":\"Filter_FilterText__2RxdS\",\"FilterInput\":\"Filter_FilterInput__3ZtjI\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('phonebook/add', addedContact => ({\n  payload: {\n    id: uuidv4(),\n    ...addedContact,\n  },\n}));\n\nconst deleteContact = createAction('phonebook/delete');\n\nconst changeFilter = createAction('phonebook/changeFilter');\n\nexport { addContact, deleteContact, changeFilter };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    id: '',\n    name: '',\n    number: '',\n  };\n\n  handleInputsChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { onAdd } = this.props;\n\n    if (name && number) {\n      onAdd({ id: uuidv4(), name, number });\n      this.resetForm();\n    }\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div className={s.FormContainer}>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <p className={s.InputTitle}>Name</p>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter name\"\n              onChange={this.handleInputsChange}\n              className={s.InputField}\n            ></input>\n          </label>\n          <label>\n            <p className={s.InputTitle}>Phone number</p>\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              placeholder=\"Enter phone number\"\n              onChange={this.handleInputsChange}\n              className={s.InputField}\n            ></input>\n          </label>\n\n          <button type=\"submit\" className={s.InputButton}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onAdd: ({ name, number }) => dispatch(addContact({ name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ id, name, number, ondeleteContact }) => {\n  return (\n    <>\n      <p className={s.ContactListItemText}>\n        {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n        onClick={() => ondeleteContact(id)}\n        className={s.ContactListItemButton}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  ondeleteContact: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport ContactListItem from './ContactListItem';\nimport s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, ondeleteContact }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={s.ContactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.ContactListItem}>\n          <ContactListItem\n            id={id}\n            name={name}\n            number={number}\n            ondeleteContact={ondeleteContact}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  ondeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\nimport ContactList from './ContactList';\n\nconst getFilteredContact = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\n  contacts: getFilteredContact(contacts, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  ondeleteContact: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChangeFilter }) => {\n  return (\n    <label>\n      <p className={s.FilterText}>Find contacts by name :</p>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={onChangeFilter}\n        placeholder=\"Enter name for search\"\n        className={s.FilterInput}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onchangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n  filter: state.phonebook.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions';\n\nconst contacts = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    phonebook: persistReducer(contactsPersistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"ContactForm_FormContainer__2KhwM\",\"InputTitle\":\"ContactForm_InputTitle__KjG2C\",\"InputField\":\"ContactForm_InputField__2OKJR\",\"InputButton\":\"ContactForm_InputButton__2inUS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3CgxQ\",\"ContactListItem\":\"ContactList_ContactListItem__1eMHI\",\"ContactListItemText\":\"ContactList_ContactListItemText__ISzdd\",\"ContactListItemButton\":\"ContactList_ContactListItemButton__rBxP2\"};"],"sourceRoot":""}